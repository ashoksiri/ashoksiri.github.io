{"version":3,"sources":["webpack:///./src/app/components/blank-layout-card/blank-layout-card.component.scss","webpack:///./src/app/pages/pages/error/error.component.html","webpack:///./src/app/pages/pages/error/error.component.ts","webpack:///./src/app/pages/pages/error/index.ts","webpack:///./src/app/pages/pages/forgot-password/forgot-password.component.html","webpack:///./src/app/pages/pages/forgot-password/forgot-password.component.ts","webpack:///./src/app/pages/pages/forgot-password/index.ts","webpack:///./src/app/pages/pages/login/index.ts","webpack:///./src/app/pages/pages/login/login.component.html","webpack:///./src/app/pages/pages/login/login.component.ts","webpack:///./src/app/pages/pages/pages-routing.module.ts","webpack:///./src/app/pages/pages/pages.module.ts","webpack:///./src/app/pages/pages/sign-up/index.ts","webpack:///./src/app/pages/pages/sign-up/sign-up.component.html","webpack:///./src/app/pages/pages/sign-up/sign-up.component.ts"],"names":[],"mappings":"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","file":"pages-pages-pages-module.js","sourcesContent":["module.exports = \"/**\\n * Copyright 2015 Google Inc. All Rights Reserved.\\n *\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n * you may not use this file except in compliance with the License.\\n * You may obtain a copy of the License at\\n *\\n *      http://www.apache.org/licenses/LICENSE-2.0\\n *\\n * Unless required by applicable law or agreed to in writing, software\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n * See the License for the specific language governing permissions and\\n * limitations under the License.\\n */\\n/**\\n * Copyright 2015 Google Inc. All Rights Reserved.\\n *\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n * you may not use this file except in compliance with the License.\\n * You may obtain a copy of the License at\\n *\\n *      http://www.apache.org/licenses/LICENSE-2.0\\n *\\n * Unless required by applicable law or agreed to in writing, software\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n * See the License for the specific language governing permissions and\\n * limitations under the License.\\n */\\n/*------------------------------------*\\\\\\n    $CONTENTS\\n\\\\*------------------------------------*/\\n/**\\n * STYLE GUIDE VARIABLES------------------Declarations of Sass variables\\n * -----Typography\\n * -----Colors\\n * -----Textfield\\n * -----Switch\\n * -----Spinner\\n * -----Radio\\n * -----Menu\\n * -----List\\n * -----Layout\\n * -----Icon toggles\\n * -----Footer\\n * -----Column\\n * -----Checkbox\\n * -----Card\\n * -----Button\\n * -----Animation\\n * -----Progress\\n * -----Badge\\n * -----Shadows\\n * -----Grid\\n * -----Data table\\n * -----Dialog\\n * -----Snackbar\\n * -----Tooltip\\n * -----Chip\\n *\\n * Even though all variables have the `!default` directive, most of them\\n * should not be changed as they are dependent one another. This can cause\\n * visual distortions (like alignment issues) that are hard to track down\\n * and fix.\\n */\\n/* ==========  TYPOGRAPHY  ========== */\\n/* We're splitting fonts into \\\"preferred\\\" and \\\"performance\\\" in order to optimize\\n   page loading. For important text, such as the body, we want it to load\\n   immediately and not wait for the web font load, whereas for other sections,\\n   such as headers and titles, we're OK with things taking a bit longer to load.\\n   We do have some optional classes and parameters in the mixins, in case you\\n   definitely want to make sure you're using the preferred font and don't mind\\n   the performance hit.\\n   We should be able to improve on this once CSS Font Loading L3 becomes more\\n   widely available.\\n*/\\n/* ==========  COLORS  ========== */\\n/**\\n*\\n* Material design color palettes.\\n* @see http://www.google.com/design/spec/style/color.html\\n*\\n**/\\n/**\\n * Copyright 2015 Google Inc. All Rights Reserved.\\n *\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n * you may not use this file except in compliance with the License.\\n * You may obtain a copy of the License at\\n *\\n *      http://www.apache.org/licenses/LICENSE-2.0\\n *\\n * Unless required by applicable law or agreed to in writing, software\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n * See the License for the specific language governing permissions and\\n * limitations under the License.\\n */\\n/* ==========  Color Palettes  ========== */\\n/* colors.scss */\\n/**\\n * Copyright 2015 Google Inc. All Rights Reserved.\\n *\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n * you may not use this file except in compliance with the License.\\n * You may obtain a copy of the License at\\n *\\n *      http://www.apache.org/licenses/LICENSE-2.0\\n *\\n * Unless required by applicable law or agreed to in writing, software\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n * See the License for the specific language governing permissions and\\n * limitations under the License.\\n */\\n/* ==========  IMAGES  ========== */\\n/* ==========  Color & Themes  ========== */\\n/* ==========  Typography  ========== */\\n/* ==========  Components  ========== */\\n/* ==========  Standard Buttons  ========== */\\n/* ==========  Icon Toggles  ========== */\\n/* ==========  Radio Buttons  ========== */\\n/* ==========  Ripple effect  ========== */\\n/* ==========  Layout  ========== */\\n/* ==========  Content Tabs  ========== */\\n/* ==========  Checkboxes  ========== */\\n/* ==========  Switches  ========== */\\n/* ==========  Spinner  ========== */\\n/* ==========  Text fields  ========== */\\n/* ==========  Card  ========== */\\n/* ==========  Sliders ========== */\\n/* ========== Progress ========== */\\n/* ==========  List ========== */\\n/* ==========  Item ========== */\\n/* ==========  Dropdown menu ========== */\\n/* ==========  Tooltips  ========== */\\n/* ==========  Footer  ========== */\\n/* TEXTFIELD */\\n/* SWITCH */\\n/* SPINNER */\\n/* RADIO */\\n/* MENU */\\n/* LIST */\\n/* LAYOUT */\\n/* ICON TOGGLE */\\n/* FOOTER */\\n/*mega-footer*/\\n/*mini-footer*/\\n/* CHECKBOX */\\n/* CARD */\\n/* Card dimensions */\\n/* Cover image */\\n/* BUTTON */\\n/**\\n *\\n * Dimensions\\n *\\n */\\n/* ANIMATION */\\n/* PROGRESS */\\n/* BADGE */\\n/* SHADOWS */\\n/* GRID */\\n/* DATA TABLE */\\n/* DIALOG */\\n/* SNACKBAR */\\n/* TOOLTIP */\\n/* CHIP */\\n/**\\n * Copyright 2015 Google Inc. All Rights Reserved.\\n *\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n * you may not use this file except in compliance with the License.\\n * You may obtain a copy of the License at\\n *\\n *      http://www.apache.org/licenses/LICENSE-2.0\\n *\\n * Unless required by applicable law or agreed to in writing, software\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n * See the License for the specific language governing permissions and\\n * limitations under the License.\\n */\\n/* Typography */\\n/* Shadows */\\n/* Animations */\\n/* Dialog */\\n/**\\n * Copyright 2015 Google Inc. All Rights Reserved.\\n *\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n * you may not use this file except in compliance with the License.\\n * You may obtain a copy of the License at\\n *\\n *      http://www.apache.org/licenses/LICENSE-2.0\\n *\\n * Unless required by applicable law or agreed to in writing, software\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n * See the License for the specific language governing permissions and\\n * limitations under the License.\\n */\\n/* ==========  Color Palettes  ========== */\\n/* colors.scss */\\n/**\\n * Copyright 2015 Google Inc. All Rights Reserved.\\n *\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n * you may not use this file except in compliance with the License.\\n * You may obtain a copy of the License at\\n *\\n *      http://www.apache.org/licenses/LICENSE-2.0\\n *\\n * Unless required by applicable law or agreed to in writing, software\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n * See the License for the specific language governing permissions and\\n * limitations under the License.\\n */\\n/* ==========  Color Palettes  ========== */\\n/* colors.scss */\\n/* ==========  IMAGES  ========== */\\n/* ==========  Color & Themes  ========== */\\n.text-color--smoke {\\n  color: #666; }\\n.color--gray {\\n  background-color: #444 !important; }\\n.color--dark-gray {\\n  background-color: #333; }\\n.color--smooth-gray {\\n  background-color: #999 !important; }\\n.text-color--smooth-gray {\\n  color: #999 !important; }\\n.color--red {\\n  background-color: #f44336 !important; }\\n.color-text--red {\\n  color: #f44336 !important; }\\n.color--orange {\\n  background-color: #ffc107 !important; }\\n.color-text--orange {\\n  color: #ffc107 !important; }\\n.color--amber {\\n  background-color: #ff9800 !important; }\\n.color-text--amber {\\n  color: #ff9800 !important; }\\n.color--green {\\n  background-color: #00d45a !important; }\\n.color-text--green {\\n  color: #00d45a !important; }\\n.color--light-blue {\\n  background-color: #03a9f4 !important; }\\n.color-text--light-blue {\\n  color: #03a9f4 !important; }\\n.color--purple {\\n  background-color: #7726d3 !important; }\\n.color-text--purple {\\n  color: #7726d3 !important; }\\n.color--teal {\\n  background-color: #00bcd4 !important; }\\n.color-text--teal {\\n  color: #00bcd4 !important; }\\n/* ==========  Typography  ========== */\\n/* ==========  Components  ========== */\\n/* ==========  Standard Buttons  ========== */\\n/* ==========  Icon Toggles  ========== */\\n/* ==========  Radio Buttons  ========== */\\n/* ==========  Ripple effect  ========== */\\n/* ==========  Layout  ========== */\\n/* ==========  Content Tabs  ========== */\\n/* ==========  Checkboxes  ========== */\\n/* ==========  Switches  ========== */\\n/* ==========  Spinner  ========== */\\n/* ==========  Text fields  ========== */\\n/* ==========  Card  ========== */\\n/* ==========  Sliders ========== */\\n/* ========== Progress ========== */\\n/* ==========  List ========== */\\n/* ==========  Item ========== */\\n/* ==========  Dropdown menu ========== */\\n/* ==========  Tooltips  ========== */\\n/* ==========  Footer  ========== */\\n/* TEXTFIELD */\\n/* SWITCH */\\n/* SPINNER */\\n/* RADIO */\\n/* MENU */\\n/* LIST */\\n/* LAYOUT */\\n/* ICON */\\n/* ICON TOGGLE */\\n/* FOOTER */\\n/* mega-footer */\\n/* mini-footer */\\n/* CHECKBOX */\\n/* CARD */\\n/* Card dimensions */\\n/* Cover image */\\n/* BUTTON */\\n/* ANIMATION */\\n/* PROGRESS */\\n/* BADGE */\\n/* SHADOWS */\\n/* GRID */\\n/* DATA TABLE */\\n/* TOOLTIP */\\n/* WIDGETS & COMPONENTS */\\n/* Trending */\\n/* label */\\n/* charts */\\n/* employer form */\\n/* row */\\n/* scroll */\\n.blank-layout-card {\\n  margin: auto;\\n  font-family: Roboto, Helvetica, sans-serif;\\n  font-size: 1rem; }\\n.blank-layout-card .mdl-button {\\n    font-weight: 500; }\\n.blank-layout-card .mdl-card__blank-layout-card.mdl-card {\\n    max-width: 450px;\\n    margin: auto; }\\n.blank-layout-card .mdl-card__blank-layout-card.mdl-card .mdl-card__supporting-text {\\n      min-height: inherit;\\n      width: 100%;\\n      padding: 32px 24px;\\n      box-sizing: border-box; }\\n.blank-layout-card .mdl-card__blank-layout-card.mdl-card .mdl-card__supporting-text .mdl-card__title-text {\\n        font-size: 17px;\\n        font-weight: bold; }\\n.blank-layout-card .mdl-card__blank-layout-card.mdl-card .mdl-card__supporting-text .blank-layout-card-name {\\n        font-size: 24px;\\n        display: block;\\n        padding: 0 0 8px 0; }\\n.blank-layout-card .mdl-card__blank-layout-card.mdl-card .mdl-card__supporting-text .blank-layout-card-link {\\n        padding: 12px 0; }\\n.blank-layout-card .mdl-card__blank-layout-card.mdl-card .mdl-card__supporting-text .blank-layout-card-link,\\n      .blank-layout-card .mdl-card__blank-layout-card.mdl-card .mdl-card__supporting-text .blank-layout-card-link * {\\n        display: inline-block;\\n        font-size: 1rem;\\n        font-weight: inherit;\\n        color: #ddd; }\\n.blank-layout-card .mdl-card__blank-layout-card.mdl-card .mdl-card__supporting-text .underlined {\\n        display: inline-block;\\n        border-bottom: 1px solid #03a9f4; }\\n.blank-layout-card .mdl-card__blank-layout-card.mdl-card .mdl-card__supporting-text .checkbox--inline {\\n        display: inline;\\n        padding-top: 4px;\\n        padding-left: 35px; }\\n.blank-layout-card .mdl-card__blank-layout-card.mdl-card .mdl-card__supporting-text .submit-cell {\\n        display: flex; }\\n.blank-layout-card .mdl-card__blank-layout-card.mdl-card .mdl-card__supporting-text .text--huge {\\n        font-size: 120px;\\n        font-weight: bold;\\n        display: inline-block;\\n        padding: 100px 0 40px 0; }\\n.blank-layout-card .mdl-card__blank-layout-card.mdl-card .mdl-card__supporting-text .text--sorry {\\n        font-size: 28px;\\n        font-weight: 300; }\\n.blank-layout-card .mdl-card__blank-layout-card.mdl-card .mdl-card__supporting-text .alignment--bottom-right {\\n        position: absolute;\\n        bottom: 39px;\\n        right: 46px; }\\n\"","module.exports = \"<div class=\\\"mdl-card mdl-card__blank-layout-card mdl-shadow--2dp\\\">\\n  <div class=\\\"mdl-card__supporting-text color--dark-gray\\\">\\n    <div class=\\\"mdl-grid\\\">\\n      <div class=\\\"mdl-cell mdl-cell--12-col mdl-cell--4-col-phone\\\">\\n        <span class=\\\"mdl-card__title-text text-color--smooth-gray\\\">DARKBOARD</span>\\n      </div>\\n      <div class=\\\"mdl-cell mdl-cell--12-col mdl-cell--4-col-phone\\\">\\n        <span class=\\\"text--huge color-text--light-blue\\\">404</span>\\n      </div>\\n      <div class=\\\"mdl-cell mdl-cell--12-col mdl-cell--4-col-phone\\\">\\n        <span class=\\\"text--sorry text-color--white\\\">Sorry, but there's nothing here</span>\\n      </div>\\n      <div class=\\\"mdl-cell mdl-cell--12-col mdl-cell--4-col-phone\\\">\\n        <a routerLink=\\\"/\\\" class=\\\"mdl-button mdl-js-button color-text--light-blue pull-right\\\">\\n          Go Back\\n        </a>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component, HostBinding } from '@angular/core';\n\nimport { BlankLayoutCardComponent } from 'app/components/blank-layout-card';\n\n@Component({\n  selector: 'app-error',\n  styleUrls: ['../../../components/blank-layout-card/blank-layout-card.component.scss'],\n  templateUrl: './error.component.html',\n})\nexport class ErrorComponent extends BlankLayoutCardComponent { }\n","export { ErrorComponent } from './error.component';\n","module.exports = \"<div class=\\\"mdl-card mdl-card__blank-layout-card mdl-shadow--2dp\\\">\\n  <div class=\\\"mdl-card__supporting-text color--dark-gray\\\">\\n    <div class=\\\"mdl-grid\\\">\\n      <div class=\\\"mdl-cell mdl-cell--12-col mdl-cell--4-col-phone\\\">\\n        <span class=\\\"mdl-card__title-text text-color--smooth-gray\\\">DARKBOARD</span>\\n      </div>\\n      <div class=\\\"mdl-cell mdl-cell--12-col mdl-cell--4-col-phone\\\">\\n        <span class=\\\"blank-layout-card-name text-color--white\\\">Forgot password?</span>\\n        <span class=\\\"blank-layout-card-secondary-text text-color--smoke\\\">Enter your email below to recieve your password</span>\\n      </div>\\n      <div class=\\\"mdl-cell mdl-cell--12-col mdl-cell--4-col-phone\\\">\\n        <div class=\\\"mdl-textfield mdl-js-textfield mdl-textfield--floating-label full-size\\\">\\n          <input class=\\\"mdl-textfield__input\\\" type=\\\"text\\\" id=\\\"e-mail\\\">\\n          <label class=\\\"mdl-textfield__label\\\" for=\\\"e-mail\\\">Email</label>\\n        </div>\\n      </div>\\n      <div class=\\\"mdl-cell mdl-cell--12-col mdl-cell--4-col-phone submit-cell\\\">\\n        <div class=\\\"mdl-layout-spacer\\\"></div>\\n        <a routerLink=\\\"/app/dashboard\\\">\\n          <button class=\\\"mdl-button mdl-js-button mdl-button--raised color--light-blue\\\">\\n            SEND PASSWORD\\n          </button>\\n        </a>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component, HostBinding } from '@angular/core';\n\nimport { BlankLayoutCardComponent } from 'app/components/blank-layout-card';\n\n@Component({\n  selector: 'app-forgot-password',\n  styleUrls: ['../../../components/blank-layout-card/blank-layout-card.component.scss'],\n  templateUrl: './forgot-password.component.html',\n})\nexport class ForgotPasswordComponent extends BlankLayoutCardComponent { }\n","export { ForgotPasswordComponent } from './forgot-password.component';\n","export { LoginComponent } from './login.component';\n","module.exports = \"<div class=\\\"mdl-card mdl-card__blank-layout-card mdl-shadow--2dp\\\">\\n  <div class=\\\"mdl-card__supporting-text color--dark-gray\\\">\\n    <div class=\\\"mdl-grid\\\">\\n      <div class=\\\"mdl-cell mdl-cell--12-col mdl-cell--4-col-phone\\\">\\n        <span class=\\\"mdl-card__title-text text-color--smooth-gray\\\">DARKBOARD</span>\\n      </div>\\n      <div class=\\\"mdl-cell mdl-cell--12-col mdl-cell--4-col-phone\\\">\\n        <span class=\\\"blank-layout-card-name text-color--white\\\">Sign in</span>\\n        <span class=\\\"blank-layout-card-secondary-text text-color--smoke\\\">Enter fields to sign in to DARKBOARD</span>\\n      </div>\\n      <form class=\\\"login-form\\\" [formGroup]=\\\"loginForm\\\" (submit)=\\\"login()\\\" autocomplete=\\\"off\\\" novalidate>\\n        <div class=\\\"mdl-cell mdl-cell--12-col mdl-cell--4-col-phone\\\">\\n          <div class=\\\"mdl-textfield mdl-js-textfield mdl-textfield--floating-label full-size\\\"\\n               [class.is-invalid]=\\\"email.invalid && (email.dirty || email.touched)\\\"\\n               [class.is-valid]=\\\"email.valid && (email.dirty || email.touched)\\\">\\n            <input formControlName=\\\"email\\\"\\n                   pattern=\\\"{{emailPattern}}\\\"\\n                   (change)=\\\"onInputChange($event)\\\"\\n                   class=\\\"mdl-textfield__input\\\" type=\\\"text\\\" id=\\\"email\\\">\\n            <label class=\\\"mdl-textfield__label\\\" for=\\\"email\\\">Email</label>\\n\\n            <div *ngIf=\\\"email.invalid && (email.dirty || email.touched)\\\">\\n              <span *ngIf=\\\"email.errors.required\\\" class=\\\"mdl-textfield__error\\\">\\n                Email is required. <span class=\\\"color-text--orange\\\"> Please, write any valid email.</span>\\n              </span>\\n              <span *ngIf=\\\"email.errors.pattern\\\" class=\\\"mdl-textfield__error\\\">\\n                Email is invalid.\\n              </span>\\n            </div>\\n          </div>\\n\\n          <div class=\\\"mdl-textfield mdl-js-textfield mdl-textfield--floating-label full-size\\\"\\n               [class.is-invalid]=\\\"password.invalid && (password.dirty || password.touched)\\\"\\n               [class.is-valid]=\\\"password.valid && (password.dirty || password.touched)\\\"\\n               id=\\\"forPass\\\">\\n            <input formControlName=\\\"password\\\"\\n                   (change)=\\\"onInputChange($event)\\\"\\n                   class=\\\"mdl-textfield__input\\\" type=\\\"password\\\" id=\\\"password\\\">\\n            <label class=\\\"mdl-textfield__label\\\" for=\\\"password\\\">Password</label>\\n            <div *ngIf=\\\"password.invalid && (password.dirty || password.touched)\\\">\\n              <span *ngIf=\\\"password.errors.required\\\" class=\\\"mdl-textfield__error\\\">\\n                Password is required. <span class=\\\"color-text--orange\\\"> Please, write any password.</span>\\n              </span>\\n            </div>\\n          </div>\\n\\n          <div class=\\\"full-size color-text--red\\\" *ngIf=\\\"error\\\"> {{ error }}</div>\\n\\n          <a routerLink=\\\"/pages/forgot-password\\\" class=\\\"blank-layout-card-link\\\">Forgot password?</a>\\n        </div>\\n        <div class=\\\"mdl-cell mdl-cell--12-col mdl-cell--4-col-phone submit-cell\\\">\\n          <a routerLink=\\\"/pages/sign-up\\\" class=\\\"blank-layout-card-link\\\">Don't have account?</a>\\n          <div class=\\\"mdl-layout-spacer\\\"></div>\\n          <button class=\\\"mdl-button mdl-js-button mdl-button--raised color--light-blue\\\"\\n                  type=\\\"submit\\\" [disabled]=\\\"loginForm.invalid\\\">\\n            SIGN IN\\n          </button>\\n        </div>\\n      </form>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\n\nimport { AuthService } from '@services/';\nimport { BlankLayoutCardComponent } from 'app/components/blank-layout-card';\n\n@Component({\n  selector: 'app-login',\n  styleUrls: ['../../../components/blank-layout-card/blank-layout-card.component.scss'],\n  templateUrl: './login.component.html',\n})\nexport class LoginComponent extends BlankLayoutCardComponent implements OnInit {\n  public loginForm: FormGroup;\n  private email;\n  private password;\n  public emailPattern = '^([a-zA-Z0-9_\\\\-\\\\.]+)@([a-zA-Z0-9_\\\\-\\\\.]+)\\\\.([a-zA-Z]{2,5})$';\n  public error: string;\n\n  constructor(private authService: AuthService,\n              private fb: FormBuilder,\n              private router: Router) {\n    super();\n\n    this.loginForm = this.fb.group({\n      password: new FormControl('', Validators.required),\n      email: new FormControl('', [\n        Validators.required,\n        Validators.pattern(this.emailPattern),\n        Validators.maxLength(20),\n      ]),\n    });\n    this.email = this.loginForm.get('email');\n    this.password = this.loginForm.get('password');\n  }\n\n  public ngOnInit() {\n    this.authService.logout();\n    this.loginForm.valueChanges.subscribe(() => {\n      this.error = null;\n    });\n  }\n\n  public login() {\n    this.error = null;\n    if (this.loginForm.valid) {\n      this.authService.login(this.loginForm.getRawValue())\n        .subscribe(res => this.router.navigate(['/app/dashboard']),\n                   error => this.error = error.message);\n    }\n  }\n\n  public onInputChange(event) {\n    event.target.required = true;\n  }\n}\n","import { ModuleWithProviders, NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { LayoutsModule } from 'app/layouts';\nimport { BlankLayoutComponent } from 'app/layouts/blank-layout';\nimport { ErrorComponent } from './error';\nimport { ForgotPasswordComponent } from './forgot-password';\nimport { LoginComponent } from './login';\nimport { SignUpComponent } from './sign-up';\n\n@NgModule({\n  imports: [\n    RouterModule.forChild([\n      {\n        path: '',\n        component: BlankLayoutComponent,\n        children: [\n          { path: '404', component: ErrorComponent, pathMatch: 'full' },\n          { path: 'login', component: LoginComponent, pathMatch: 'full' },\n          { path: 'sign-up', component: SignUpComponent, pathMatch: 'full' },\n          { path: 'forgot-password', component: ForgotPasswordComponent, pathMatch: 'full' },\n          { path: '**', redirectTo: '404' },\n        ],\n      },\n    ]),\n    LayoutsModule,\n  ],\n  exports: [RouterModule],\n})\nexport class PagesRoutingModule { }\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { ThemeModule } from 'theme';\n\nimport { TooltipModule } from '../../../theme/directives/tooltip/tooltip.module';\nimport { ErrorComponent } from './error';\nimport { ForgotPasswordComponent } from './forgot-password';\nimport { LoginComponent } from './login';\nimport { PagesRoutingModule } from './pages-routing.module';\nimport { SignUpComponent } from './sign-up';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ThemeModule,\n    PagesRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    TooltipModule,\n  ],\n  declarations: [\n    ErrorComponent,\n    LoginComponent,\n    SignUpComponent,\n    ForgotPasswordComponent,\n  ],\n})\nexport class PagesModule { }\n","export { SignUpComponent } from './sign-up.component';\n","module.exports = \"<div class=\\\"mdl-card mdl-card__blank-layout-card mdl-shadow--2dp\\\">\\n  <div class=\\\"mdl-card__supporting-text color--dark-gray\\\">\\n    <div class=\\\"mdl-grid\\\">\\n      <div class=\\\"mdl-cell mdl-cell--12-col mdl-cell--4-col-phone\\\">\\n        <span class=\\\"mdl-card__title-text text-color--smooth-gray\\\">DARKBOARD</span>\\n      </div>\\n      <div class=\\\"mdl-cell mdl-cell--12-col mdl-cell--4-col-phone\\\">\\n        <span class=\\\"blank-layout-card-name text-color--white\\\">Sign up</span>\\n      </div>\\n      <form class=\\\"login-form\\\" [formGroup]=\\\"signupForm\\\" (submit)=\\\"login()\\\" novalidate autocomplete=\\\"off\\\">\\n        <div class=\\\"mdl-cell mdl-cell--12-col mdl-cell--4-col-phone\\\">\\n          <div class=\\\"mdl-textfield mdl-js-textfield mdl-textfield--floating-label full-size\\\"\\n               [class.is-invalid]=\\\"username.invalid && (username.dirty || username.touched)\\\"\\n               [class.is-valid]=\\\"username.valid && (username.dirty || username.touched)\\\">\\n            <input formControlName=\\\"username\\\"\\n                   (change)=\\\"onInputChange($event)\\\"\\n                   class=\\\"mdl-textfield__input\\\" type=\\\"text\\\" id=\\\"username\\\">\\n            <label class=\\\"mdl-textfield__label\\\" for=\\\"username\\\">Name</label>\\n\\n            <div *ngIf=\\\"username.invalid && (username.dirty || username.touched)\\\">\\n              <span *ngIf=\\\"username.errors.required\\\" class=\\\"mdl-textfield__error\\\">\\n                Name is required. <span class=\\\"color-text--orange\\\"> Please, write any name.</span>\\n              </span>\\n            </div>\\n          </div>\\n          <div class=\\\"mdl-textfield mdl-js-textfield mdl-textfield--floating-label full-size\\\"\\n               [class.is-invalid]=\\\"password.invalid && (password.dirty || password.touched)\\\"\\n               [class.is-valid]=\\\"password.valid && (password.dirty || password.touched)\\\" id=\\\"forRass\\\">\\n            <input formControlName=\\\"password\\\"\\n                   (change)=\\\"onInputChange($event)\\\"\\n                   class=\\\"mdl-textfield__input\\\" type=\\\"password\\\" id=\\\"password\\\">\\n            <label class=\\\"mdl-textfield__label\\\" for=\\\"password\\\">Password</label>\\n            <div *ngIf=\\\"password.invalid && (password.dirty || password.touched)\\\">\\n              <span *ngIf=\\\"password.errors.required\\\" class=\\\"mdl-textfield__error\\\">\\n                Password is required. <span class=\\\"color-text--orange\\\"> Please, write any password.</span>\\n              </span>\\n            </div>\\n          </div>\\n          <div class=\\\"mdl-textfield mdl-js-textfield mdl-textfield--floating-label full-size\\\"\\n               [class.is-invalid]=\\\"email.invalid && (email.dirty || email.touched)\\\"\\n               [class.is-valid]=\\\"email.valid && (email.dirty || email.touched)\\\">\\n            <input formControlName=\\\"email\\\"\\n                   pattern=\\\"{{emailPattern}}\\\"\\n                   (change)=\\\"onInputChange($event)\\\"\\n                   class=\\\"mdl-textfield__input\\\" type=\\\"text\\\" id=\\\"email\\\">\\n            <label class=\\\"mdl-textfield__label\\\" for=\\\"email\\\">Email</label>\\n\\n            <div *ngIf=\\\"email.invalid && (email.dirty || email.touched)\\\">\\n              <span *ngIf=\\\"email.errors.required\\\" class=\\\"mdl-textfield__error\\\">\\n                Email is required. <span class=\\\"color-text--orange\\\"> Please, write any valid email.</span>\\n              </span>\\n              <span *ngIf=\\\"email.errors.pattern\\\" class=\\\"mdl-textfield__error\\\">\\n                Email is invalid.\\n              </span>\\n            </div>\\n          </div>\\n\\n          <label baseCheckbox color=\\\"light-blue\\\" class=\\\"checkbox--inline\\\" inline></label>\\n          <span class=\\\"blank-layout-card-link\\\">I agree all statements in <a href=\\\"#\\\"\\n                                                                            class=\\\"underlined\\\">terms of service</a></span>\\n        </div>\\n        <div class=\\\"mdl-cell mdl-cell--12-col mdl-cell--4-col-phone submit-cell\\\">\\n          <a routerLink=\\\"/pages/login\\\" class=\\\"blank-layout-card-link\\\">I have already signed up</a>\\n          <div class=\\\"mdl-layout-spacer\\\"></div>\\n          <button class=\\\"mdl-button mdl-js-button mdl-button--raised color--light-blue\\\"\\n                  type=\\\"submit\\\" [disabled]=\\\"signupForm.invalid\\\">\\n            SIGN UP\\n          </button>\\n        </div>\\n      </form>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\n\nimport { AuthService } from '@services/*';\n\nimport { BlankLayoutCardComponent } from 'app/components/blank-layout-card';\n\n@Component({\n  selector: 'app-sign-up',\n  styleUrls: ['../../../components/blank-layout-card/blank-layout-card.component.scss'],\n  templateUrl: './sign-up.component.html',\n})\nexport class SignUpComponent extends BlankLayoutCardComponent implements OnInit {\n\n  public signupForm: FormGroup;\n  private email;\n  private password;\n  private username;\n  public emailPattern = '^([a-zA-Z0-9_\\\\-\\\\.]+)@([a-zA-Z0-9_\\\\-\\\\.]+)\\\\.([a-zA-Z]{2,5})$';\n  public error: string;\n\n  constructor(private authService: AuthService,\n              private fb: FormBuilder,\n              private router: Router) {\n    super();\n\n    this.signupForm = this.fb.group({\n      password: new FormControl('', Validators.required),\n      email: new FormControl('', [\n        Validators.required,\n        Validators.pattern(this.emailPattern),\n        Validators.maxLength(20),\n      ]),\n      username: new FormControl('', [Validators.required, Validators.maxLength(10)]),\n    });\n    this.email = this.signupForm.get('email');\n    this.password = this.signupForm.get('password');\n    this.username = this.signupForm.get('username');\n  }\n\n  public ngOnInit() {\n    this.authService.logout();\n    this.signupForm.valueChanges.subscribe(() => {\n      this.error = null;\n    });\n  }\n\n  public login() {\n    this.error = null;\n    if (this.signupForm.valid) {\n      this.authService.signup(this.signupForm.getRawValue())\n        .subscribe(res => this.router.navigate(['/app/dashboard']),\n                   error => this.error = error.message);\n    }\n  }\n\n  public onInputChange(event) {\n    event.target.required = true;\n  }\n}\n"],"sourceRoot":""}